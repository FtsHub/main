--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v80 = v2(v0(v30, 16));
				if v19 then
					local v87 = v5(v80, v19);
					v19 = nil;
					return v87;
				else
					return v80;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v81 = (v31 / ((5 - 3) ^ (v32 - 1))) % ((5 - 3) ^ (((v33 - (1 - 0)) - (v32 - (2 - 1))) + 1));
				return v81 - (v81 % 1);
			else
				local v82 = (1496 - (282 + 595)) - (555 + 64);
				local v83;
				while true do
					if (v82 == (931 - (857 + 74))) then
						v83 = (570 - (367 + 201)) ^ (v32 - (928 - (214 + 713)));
						return (((v31 % (v83 + v83)) >= v83) and (1 + 0)) or (0 + (1637 - (1523 + 114)));
					end
				end
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + 2 + 0);
			v18 = v18 + 2;
			return (v36 * (364 - 108)) + v35;
		end
		local function v23()
			local v37, v38, v39, v40 = v1(v16, v18, v18 + (1068 - ((185 - (32 + 85)) + 997)));
			v18 = v18 + (1274 - (226 + 1044));
			return (v40 * 16777216) + (v39 * (285370 - 219834)) + (v38 * 256) + v37;
		end
		local function v24()
			local v41 = 0 + 0;
			local v42;
			local v43;
			local v44;
			local v45;
			local v46;
			local v47;
			while true do
				if (v41 == (0 + 0)) then
					v42 = v23();
					v43 = v23();
					v41 = 1;
				end
				if (v41 == (960 - (892 + 65))) then
					if (v46 == 0) then
						if (v45 == (0 - 0)) then
							return v47 * 0;
						else
							local v100 = 0 - 0;
							while true do
								if (v100 == (0 - 0)) then
									v46 = 1;
									v44 = 350 - (87 + 263);
									break;
								end
							end
						end
					elseif (v46 == 2047) then
						return ((v45 == (180 - (67 + 113))) and (v47 * ((1 + 0 + (791 - (368 + 423))) / (0 - 0)))) or (v47 * NaN);
					end
					return v8(v47, v46 - (2511 - (1506 - (10 + 8)))) * (v44 + (v45 / (2 ^ (39 + 13))));
				end
				if (v41 == (7 - 5)) then
					v46 = v20(v43, 973 - (802 + (577 - 427)), 83 - 52);
					v47 = ((v20(v43, 57 - (467 - (416 + 26))) == (1 + 0)) and -(998 - (915 + 82))) or (2 - 1);
					v41 = 2 + 1;
				end
				if (v41 == 1) then
					v44 = 1 - 0;
					v45 = (v20(v43, 1188 - (1069 + 118), 45 - 25) * ((3 - 1) ^ (6 + 26))) + v42;
					v41 = 3 - 1;
				end
			end
		end
		local function v25(v48)
			local v49 = 0 - 0;
			local v50;
			local v51;
			while true do
				if (v49 == (1 + (1138 - (116 + 1022)))) then
					v50 = v3(v16, v18, (v18 + v48) - (1 - 0));
					v18 = v18 + v48;
					v49 = 440 - (145 + 293);
				end
				if (v49 == (430 - (44 + 386))) then
					v50 = nil;
					if not v48 then
						local v94 = 1486 - (998 + 488);
						while true do
							if (v94 == 0) then
								v48 = v23();
								if (v48 == 0) then
									return "";
								end
								break;
							end
						end
					end
					v49 = 1 + 0;
				end
				if (v49 == 3) then
					return v6(v51);
				end
				if (v49 == (2 + 0)) then
					v51 = {};
					for v88 = 773 - (201 + (2377 - 1806)), #v50 do
						v51[v88] = v2(v1(v3(v50, v88, v88)));
					end
					v49 = 2 + 1;
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 0;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			while true do
				local v65 = 0;
				while true do
					if (v65 ~= (121 - (17 + 104))) then
					else
						if (v52 ~= 1) then
						else
							local v95 = 0 - 0;
							local v96;
							while true do
								if (v95 == (0 - 0)) then
									v96 = 0;
									while true do
										if (v96 ~= 1) then
										else
											for v106 = 1, v57 do
												local v107 = 0 + 0;
												local v108;
												local v109;
												local v110;
												local v111;
												while true do
													if (v107 == (1 + 0)) then
														v110 = nil;
														v111 = nil;
														v107 = 2 + 0;
													end
													if (v107 == (0 + 0)) then
														v108 = 0 - 0;
														v109 = nil;
														v107 = 2 - 1;
													end
													if (v107 == 2) then
														while true do
															if (v108 == (0 + 0)) then
																local v323 = 0;
																local v324;
																while true do
																	if (v323 ~= (0 - 0)) then
																	else
																		v324 = 405 - (118 + 287);
																		while true do
																			if ((0 - 0) == v324) then
																				local v356 = 0 + 0;
																				while true do
																					if (v356 ~= (0 - 0)) then
																					else
																						v109 = 0;
																						v110 = nil;
																						v356 = 1637 - (1373 + 263);
																					end
																					if (v356 == (2 - 1)) then
																						v324 = 1;
																						break;
																					end
																				end
																			end
																			if (v324 == 1) then
																				v108 = 1001 - (451 + 549);
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															if (v108 ~= (1 + 0)) then
															else
																v111 = nil;
																while true do
																	if (v109 ~= (1 - 0)) then
																	else
																		if (v110 == 1) then
																			v111 = v21() ~= (0 - 0);
																		elseif (v110 == 2) then
																			v111 = v24();
																		elseif (v110 == (1387 - (746 + 638))) then
																			v111 = v25();
																		end
																		v58[v106] = v111;
																		break;
																	end
																	if (v109 == (0 - 0)) then
																		local v353 = 0 + 0;
																		local v354;
																		while true do
																			if (v353 ~= (0 + 0)) then
																			else
																				v354 = 0 + 0;
																				while true do
																					if (v354 ~= (1 - 0)) then
																					else
																						v109 = 342 - (218 + 123);
																						break;
																					end
																					if ((1581 - (1535 + 46)) == v354) then
																						local v363 = 0 + 0;
																						local v364;
																						while true do
																							if (v363 == 0) then
																								v364 = 0 + 0;
																								while true do
																									if (v364 == (560 - (306 + 254))) then
																										local v365 = 0 - 0;
																										while true do
																											if (v365 == (0 + 0)) then
																												v110 = v21();
																												v111 = nil;
																												v365 = 1;
																											end
																											if (1 == v365) then
																												v364 = 1 - 0;
																												break;
																											end
																										end
																									end
																									if (v364 == 1) then
																										v354 = 1 + 0;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
														break;
													end
												end
											end
											v56[14 - 11] = v21();
											v96 = 2;
										end
										if (v96 == (1469 - (899 + 568))) then
											v52 = 1 + 1;
											break;
										end
										if (v96 ~= (1329 - (797 + 532))) then
										else
											local v103 = 0 + 0;
											while true do
												if (v103 == (2 - 1)) then
													v96 = 1;
													break;
												end
												if (v103 == (603 - (268 + 335))) then
													v57 = v23();
													v58 = {};
													v103 = 291 - (60 + 230);
												end
											end
										end
									end
									break;
								end
							end
						end
						if ((574 - (426 + 146)) ~= v52) then
						else
							local v97 = 731 - (476 + 255);
							while true do
								local v101 = 0;
								while true do
									if (0 == v101) then
										if (0 == v97) then
											local v104 = 0 + 0;
											while true do
												if (v104 == (1 + 0)) then
													v97 = 1;
													break;
												end
												if (v104 == (0 - 0)) then
													for v242 = 1 - 0, v23() do
														local v243 = 0;
														local v244;
														local v245;
														local v246;
														while true do
															if (v243 == (1456 - (282 + 1174))) then
																v244 = 0 + 0;
																v245 = nil;
																v243 = 1 - 0;
															end
															if (v243 ~= (337 - (144 + 192))) then
															else
																v246 = nil;
																while true do
																	if (v244 ~= (812 - (569 + 242))) then
																	else
																		while true do
																			if (v245 ~= 0) then
																			else
																				v246 = v21();
																				if (v20(v246, 2 - 1, 1 + 0) ~= 0) then
																				else
																					local v357 = 1024 - (706 + 318);
																					local v358;
																					local v359;
																					local v360;
																					local v361;
																					local v362;
																					while true do
																						if (v357 == (2 + 0)) then
																							v362 = nil;
																							while true do
																								if (v358 == (1251 - (721 + 530))) then
																									v359 = 0 + 0;
																									v360 = nil;
																									v358 = 1;
																								end
																								if (v358 == (1505 - (363 + 1141))) then
																									v361 = nil;
																									v362 = nil;
																									v358 = 1273 - (945 + 326);
																								end
																								if ((4 - 2) == v358) then
																									while true do
																										if (v359 == (2 - 1)) then
																											local v366 = 0 + 0;
																											local v367;
																											while true do
																												if (v366 ~= (700 - (271 + 429))) then
																												else
																													v367 = 0 + 0;
																													while true do
																														if (v367 == (1975 - (1913 + 62))) then
																															v362 = {v22(),v22(),nil,nil};
																															if (v360 == (1086 - (461 + 625))) then
																																local v376 = 0 - 0;
																																local v377;
																																while true do
																																	if (v376 ~= (1288 - (993 + 295))) then
																																	else
																																		v377 = 0 + 0;
																																		while true do
																																			if (v377 == (0 - 0)) then
																																				v362[3 + 0] = v22();
																																				v362[1175 - (418 + 753)] = v22();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v360 == (1 + 0)) then
																																v362[8 - 5] = v23();
																															elseif (v360 == (1 + 1)) then
																																v362[3 + 0] = v23() - ((478 - (41 + 435)) ^ 16);
																															elseif (v360 == (1004 - (938 + 63))) then
																																local v383 = 0;
																																local v384;
																																local v385;
																																while true do
																																	if (v383 == (0 + 0)) then
																																		v384 = 0 + 0;
																																		v385 = nil;
																																		v383 = 1;
																																	end
																																	if (v383 ~= 1) then
																																	else
																																		while true do
																																			if (v384 == 0) then
																																				v385 = 1125 - (936 + 189);
																																				while true do
																																					if (v385 == 0) then
																																						v362[3] = v23() - ((531 - (406 + 123)) ^ (1785 - (1749 + 20)));
																																						v362[1 + 3] = v22();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v367 = 1 + 0;
																														end
																														if ((1323 - (1249 + 73)) ~= v367) then
																														else
																															v359 = 1 + 1;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v359 == (1140 - (782 + 356))) then
																											local v368 = 0;
																											while true do
																												if ((1146 - (466 + 679)) == v368) then
																													v359 = 3;
																													break;
																												end
																												if (v368 == 0) then
																													local v374 = 0 - 0;
																													local v375;
																													while true do
																														if ((0 - 0) == v374) then
																															v375 = 1092 - (975 + 117);
																															while true do
																																if (v375 == (1901 - (106 + 1794))) then
																																	v368 = 1 + 0;
																																	break;
																																end
																																if ((0 + 0) == v375) then
																																	local v378 = 0;
																																	while true do
																																		if ((1 + 0) == v378) then
																																			v375 = 2 - 1;
																																			break;
																																		end
																																		if (v378 ~= (0 - 0)) then
																																		else
																																			if (v20(v361, 2 - 1, 1 - 0) ~= (115 - (4 + 110))) then
																																			else
																																				v362[586 - (57 + 527)] = v58[v362[2]];
																																			end
																																			if (v20(v361, 2, 1429 - (41 + 1386)) ~= (104 - (17 + 86))) then
																																			else
																																				v362[3] = v58[v362[3]];
																																			end
																																			v378 = 1 + 0;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																											end
																										end
																										if (v359 == 3) then
																											if (v20(v361, 1230 - (322 + 905), 3) ~= 1) then
																											else
																												v362[8 - 4] = v58[v362[11 - 7]];
																											end
																											v53[v242] = v362;
																											break;
																										end
																										if (v359 ~= 0) then
																										else
																											local v370 = 0;
																											local v371;
																											while true do
																												if (v370 ~= (166 - (122 + 44))) then
																												else
																													v371 = 0 - 0;
																													while true do
																														if (v371 == (3 - 2)) then
																															v359 = 948 - (245 + 702);
																															break;
																														end
																														if (v371 ~= (0 + 0)) then
																														else
																															v360 = v20(v246, 1 + 1, 3);
																															v361 = v20(v246, 7 - 3, 71 - (30 + 35));
																															v371 = 1899 - (260 + 1638);
																														end
																													end
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																						if (v357 == (0 + 0)) then
																							v358 = 0 - 0;
																							v359 = nil;
																							v357 = 1 + 0;
																						end
																						if (v357 == (1258 - (1043 + 214))) then
																							v360 = nil;
																							v361 = nil;
																							v357 = 5 - 3;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (v244 == (0 - 0)) then
																		local v355 = 1212 - (323 + 889);
																		while true do
																			if ((0 - 0) == v355) then
																				v245 = 580 - (361 + 219);
																				v246 = nil;
																				v355 = 2 - 1;
																			end
																			if (v355 == 1) then
																				v244 = 321 - (53 + 267);
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													for v247 = 1, v23() do
														v54[v247 - 1] = v28();
													end
													v104 = 1;
												end
											end
										end
										if ((1 + 0) == v97) then
											return v56;
										end
										break;
									end
								end
							end
						end
						v65 = 414 - (15 + 398);
					end
					if (1 ~= v65) then
					else
						if ((982 - (18 + 964)) ~= v52) then
						else
							local v98 = 0 - 0;
							local v99;
							while true do
								if ((0 + 0) == v98) then
									v99 = 0 + 0;
									while true do
										if ((850 - (20 + 830)) == v99) then
											local v105 = 0 + 0;
											while true do
												if (v105 ~= 0) then
												else
													v53 = {};
													v54 = {};
													v105 = 1;
												end
												if (v105 ~= (127 - (116 + 10))) then
												else
													v99 = 1 + 0;
													break;
												end
											end
										end
										if (v99 ~= (767 - (468 + 297))) then
										else
											v52 = 1;
											break;
										end
										if (v99 == (739 - (542 + 196))) then
											v55 = {};
											v56 = {v53,v54,nil,v55};
											v99 = 2;
										end
									end
									break;
								end
							end
						end
						break;
					end
				end
			end
		end
		local function v29(v59, v60, v61)
			local v62 = v59[1];
			local v63 = v59[2];
			local v64 = v59[3];
			return function(...)
				local v66 = v62;
				local v67 = v63;
				local v68 = v64;
				local v69 = v27;
				local v70 = 1;
				local v71 = -1;
				local v72 = {};
				local v73 = {...};
				local v74 = v12("#", ...) - 1;
				local v75 = {};
				local v76 = {};
				for v84 = 0, v74 do
					if (v84 >= v68) then
						v72[v84 - v68] = v73[v84 + 1];
					else
						v76[v84] = v73[v84 + 1];
					end
				end
				local v77 = (v74 - v68) + 1;
				local v78;
				local v79;
				while true do
					v78 = v66[v70];
					v79 = v78[1];
					if (v79 <= 34) then
						if (v79 <= 16) then
							if (v79 <= 7) then
								if (v79 <= 3) then
									if (v79 <= 1) then
										if (v79 == 0) then
											if (v78[2] < v76[v78[4]]) then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										else
											v76[v78[2]][v78[3]] = v76[v78[4]];
										end
									elseif (v79 > 2) then
										v76[v78[2]] = v78[3];
									else
										local v116 = 0;
										local v117;
										local v118;
										local v119;
										local v120;
										while true do
											if (v116 == 0) then
												v117 = v78[2];
												v118, v119 = v69(v76[v117](v13(v76, v117 + 1, v71)));
												v116 = 1;
											end
											if (v116 == 2) then
												for v290 = v117, v71 do
													v120 = v120 + 1;
													v76[v290] = v118[v120];
												end
												break;
											end
											if (v116 == 1) then
												v71 = (v119 + v117) - 1;
												v120 = 0;
												v116 = 2;
											end
										end
									end
								elseif (v79 <= 5) then
									if (v79 == 4) then
										v76[v78[2]] = v76[v78[3]];
									else
										local v123 = v78[2];
										v76[v123] = v76[v123](v13(v76, v123 + 1, v78[3]));
									end
								elseif (v79 == 6) then
									local v125 = v78[2];
									v76[v125] = v76[v125]();
								else
									v76[v78[2]] = {};
								end
							elseif (v79 <= 11) then
								if (v79 <= 9) then
									if (v79 > 8) then
										if (v76[v78[2]] == v78[4]) then
											v70 = v70 + 1;
										else
											v70 = v78[3];
										end
									else
										v76[v78[2]] = v76[v78[3]] + v78[4];
									end
								elseif (v79 == 10) then
									local v129 = v78[2];
									v76[v129] = v76[v129](v13(v76, v129 + 1, v71));
								else
									v76[v78[2]] = v61[v78[3]];
								end
							elseif (v79 <= 13) then
								if (v79 > 12) then
									local v133 = v76[v78[4]];
									if not v133 then
										v70 = v70 + 1;
									else
										v76[v78[2]] = v133;
										v70 = v78[3];
									end
								else
									v76[v78[2]] = v29(v67[v78[3]], nil, v61);
								end
							elseif (v79 <= 14) then
								v76[v78[2]]();
							elseif (v79 == 15) then
								v70 = v78[3];
							else
								local v254 = v78[2];
								v76[v254] = v76[v254]();
							end
						elseif (v79 <= 25) then
							if (v79 <= 20) then
								if (v79 <= 18) then
									if (v79 == 17) then
										v76[v78[2]] = v78[3];
									else
										local v137 = v78[2];
										v76[v137] = v76[v137](v13(v76, v137 + 1, v71));
									end
								elseif (v79 == 19) then
									local v139 = v78[2];
									local v140, v141 = v69(v76[v139](v13(v76, v139 + 1, v78[3])));
									v71 = (v141 + v139) - 1;
									local v142 = 0;
									for v219 = v139, v71 do
										local v220 = 0;
										while true do
											if (v220 == 0) then
												v142 = v142 + 1;
												v76[v219] = v140[v142];
												break;
											end
										end
									end
								else
									local v143 = 0;
									local v144;
									local v145;
									local v146;
									while true do
										if (v143 == 2) then
											if (v145 > 0) then
												if (v146 <= v76[v144 + 1]) then
													v70 = v78[3];
													v76[v144 + 3] = v146;
												end
											elseif (v146 >= v76[v144 + 1]) then
												v70 = v78[3];
												v76[v144 + 3] = v146;
											end
											break;
										end
										if (v143 == 1) then
											v146 = v76[v144] + v145;
											v76[v144] = v146;
											v143 = 2;
										end
										if (v143 == 0) then
											v144 = v78[2];
											v145 = v76[v144 + 2];
											v143 = 1;
										end
									end
								end
							elseif (v79 <= 22) then
								if (v79 > 21) then
									v76[v78[2]] = v76[v78[3]];
								elseif (v76[v78[2]] == v78[4]) then
									v70 = v70 + 1;
								else
									v70 = v78[3];
								end
							elseif (v79 <= 23) then
								local v149 = 0;
								local v150;
								local v151;
								while true do
									if (v149 == 1) then
										v76[v150 + 1] = v151;
										v76[v150] = v151[v78[4]];
										break;
									end
									if (v149 == 0) then
										v150 = v78[2];
										v151 = v76[v78[3]];
										v149 = 1;
									end
								end
							elseif (v79 == 24) then
								local v257 = 0;
								local v258;
								while true do
									if (v257 == 0) then
										v258 = v78[2];
										v76[v258](v13(v76, v258 + 1, v78[3]));
										break;
									end
								end
							else
								do
									return;
								end
							end
						elseif (v79 <= 29) then
							if (v79 <= 27) then
								if (v79 > 26) then
									local v152 = v78[2];
									v76[v152](v13(v76, v152 + 1, v71));
								else
									v76[v78[2]] = v60[v78[3]];
								end
							elseif (v79 == 28) then
								v76[v78[2]][v78[3]] = v78[4];
							else
								local v157 = v78[2];
								local v158, v159 = v69(v76[v157](v13(v76, v157 + 1, v71)));
								v71 = (v159 + v157) - 1;
								local v160 = 0;
								for v221 = v157, v71 do
									v160 = v160 + 1;
									v76[v221] = v158[v160];
								end
							end
						elseif (v79 <= 31) then
							if (v79 == 30) then
								v76[v78[2]] = {};
							else
								local v162 = 0;
								local v163;
								while true do
									if (v162 == 0) then
										v163 = v78[2];
										v76[v163](v76[v163 + 1]);
										break;
									end
								end
							end
						elseif (v79 <= 32) then
							v76[v78[2]] = v61[v78[3]];
						elseif (v79 > 33) then
							if (v78[2] < v76[v78[4]]) then
								v70 = v70 + 1;
							else
								v70 = v78[3];
							end
						else
							v76[v78[2]]();
						end
					elseif (v79 <= 51) then
						if (v79 <= 42) then
							if (v79 <= 38) then
								if (v79 <= 36) then
									if (v79 > 35) then
										local v166 = 0;
										local v167;
										local v168;
										local v169;
										while true do
											if (v166 == 0) then
												v167 = v67[v78[3]];
												v168 = nil;
												v166 = 1;
											end
											if (v166 == 2) then
												for v296 = 1, v78[4] do
													v70 = v70 + 1;
													local v297 = v66[v70];
													if (v297[1] == 22) then
														v169[v296 - 1] = {v76,v297[3]};
													else
														v169[v296 - 1] = {v60,v297[3]};
													end
													v75[#v75 + 1] = v169;
												end
												v76[v78[2]] = v29(v167, v168, v61);
												break;
											end
											if (v166 == 1) then
												v169 = {};
												v168 = v10({}, {__index=function(v299, v300)
													local v301 = 0;
													local v302;
													while true do
														if (0 == v301) then
															v302 = v169[v300];
															return v302[1][v302[2]];
														end
													end
												end,__newindex=function(v303, v304, v305)
													local v306 = v169[v304];
													v306[1][v306[2]] = v305;
												end});
												v166 = 2;
											end
										end
									elseif (v78[2] == v76[v78[4]]) then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								elseif (v79 > 37) then
									local v170 = v67[v78[3]];
									local v171;
									local v172 = {};
									v171 = v10({}, {__index=function(v224, v225)
										local v226 = v172[v225];
										return v226[1][v226[2]];
									end,__newindex=function(v227, v228, v229)
										local v230 = v172[v228];
										v230[1][v230[2]] = v229;
									end});
									for v232 = 1, v78[4] do
										v70 = v70 + 1;
										local v233 = v66[v70];
										if (v233[1] == 22) then
											v172[v232 - 1] = {v76,v233[3]};
										else
											v172[v232 - 1] = {v60,v233[3]};
										end
										v75[#v75 + 1] = v172;
									end
									v76[v78[2]] = v29(v170, v171, v61);
								else
									local v174 = 0;
									local v175;
									while true do
										if (v174 == 0) then
											v175 = v78[2];
											v76[v175](v13(v76, v175 + 1, v78[3]));
											break;
										end
									end
								end
							elseif (v79 <= 40) then
								if (v79 > 39) then
									if (v78[2] == v76[v78[4]]) then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								else
									local v176 = v78[2];
									local v177 = v76[v176];
									local v178 = v76[v176 + 2];
									if (v178 > 0) then
										if (v177 > v76[v176 + 1]) then
											v70 = v78[3];
										else
											v76[v176 + 3] = v177;
										end
									elseif (v177 < v76[v176 + 1]) then
										v70 = v78[3];
									else
										v76[v176 + 3] = v177;
									end
								end
							elseif (v79 > 41) then
								v76[v78[2]] = #v76[v78[3]];
							else
								local v180 = v78[2];
								local v181, v182 = v69(v76[v180](v13(v76, v180 + 1, v78[3])));
								v71 = (v182 + v180) - 1;
								local v183 = 0;
								for v235 = v180, v71 do
									local v236 = 0;
									while true do
										if (v236 == 0) then
											v183 = v183 + 1;
											v76[v235] = v181[v183];
											break;
										end
									end
								end
							end
						elseif (v79 <= 46) then
							if (v79 <= 44) then
								if (v79 > 43) then
									v76[v78[2]] = v76[v78[3]] + v78[4];
								else
									local v185 = v78[2];
									v76[v185] = v76[v185](v76[v185 + 1]);
								end
							elseif (v79 > 45) then
								v76[v78[2]][v78[3]] = v78[4];
							else
								v76[v78[2]] = v76[v78[3]][v78[4]];
							end
						elseif (v79 <= 48) then
							if (v79 == 47) then
								local v191 = v78[2];
								local v192 = v76[v191 + 2];
								local v193 = v76[v191] + v192;
								v76[v191] = v193;
								if (v192 > 0) then
									if (v193 <= v76[v191 + 1]) then
										v70 = v78[3];
										v76[v191 + 3] = v193;
									end
								elseif (v193 >= v76[v191 + 1]) then
									local v316 = 0;
									while true do
										if (v316 == 0) then
											v70 = v78[3];
											v76[v191 + 3] = v193;
											break;
										end
									end
								end
							else
								local v195 = v78[2];
								v76[v195](v76[v195 + 1]);
							end
						elseif (v79 <= 49) then
							local v196 = v78[2];
							v76[v196] = v76[v196](v13(v76, v196 + 1, v78[3]));
						elseif (v79 > 50) then
							v76[v78[2]] = #v76[v78[3]];
						else
							for v285 = v78[2], v78[3] do
								v76[v285] = nil;
							end
						end
					elseif (v79 <= 60) then
						if (v79 <= 55) then
							if (v79 <= 53) then
								if (v79 == 52) then
									v70 = v78[3];
								else
									v76[v78[2]] = v76[v78[3]] / v78[4];
								end
							elseif (v79 == 54) then
								local v200 = v78[2];
								v76[v200] = v76[v200](v76[v200 + 1]);
							else
								v76[v78[2]] = v76[v78[3]] / v78[4];
							end
						elseif (v79 <= 57) then
							if (v79 > 56) then
								do
									return;
								end
							else
								v76[v78[2]][v78[3]] = v76[v78[4]];
							end
						elseif (v79 <= 58) then
							for v237 = v78[2], v78[3] do
								v76[v237] = nil;
							end
						elseif (v79 > 59) then
							local v262 = v78[2];
							local v263 = {};
							for v287 = 1, #v75 do
								local v288 = v75[v287];
								for v317 = 0, #v288 do
									local v318 = v288[v317];
									local v319 = v318[1];
									local v320 = v318[2];
									if ((v319 == v76) and (v320 >= v262)) then
										v263[v320] = v319[v320];
										v318[1] = v263;
									end
								end
							end
						else
							local v264 = v78[2];
							local v265 = v76[v264];
							local v266 = v76[v264 + 2];
							if (v266 > 0) then
								if (v265 > v76[v264 + 1]) then
									v70 = v78[3];
								else
									v76[v264 + 3] = v265;
								end
							elseif (v265 < v76[v264 + 1]) then
								v70 = v78[3];
							else
								v76[v264 + 3] = v265;
							end
						end
					elseif (v79 <= 64) then
						if (v79 <= 62) then
							if (v79 > 61) then
								if v76[v78[2]] then
									v70 = v70 + 1;
								else
									v70 = v78[3];
								end
							else
								v76[v78[2]] = v29(v67[v78[3]], nil, v61);
							end
						elseif (v79 == 63) then
							v76[v78[2]] = v76[v78[3]][v78[4]];
						else
							local v208 = v78[2];
							local v209 = v76[v78[3]];
							v76[v208 + 1] = v209;
							v76[v208] = v209[v78[4]];
						end
					elseif (v79 <= 66) then
						if (v79 > 65) then
							local v213 = v78[2];
							local v214 = {};
							for v239 = 1, #v75 do
								local v240 = 0;
								local v241;
								while true do
									if (0 == v240) then
										v241 = v75[v239];
										for v326 = 0, #v241 do
											local v327 = v241[v326];
											local v328 = v327[1];
											local v329 = v327[2];
											if ((v328 == v76) and (v329 >= v213)) then
												v214[v329] = v328[v329];
												v327[1] = v214;
											end
										end
										break;
									end
								end
							end
						else
							local v215 = 0;
							local v216;
							while true do
								if (v215 == 0) then
									v216 = v76[v78[4]];
									if not v216 then
										v70 = v70 + 1;
									else
										v76[v78[2]] = v216;
										v70 = v78[3];
									end
									break;
								end
							end
						end
					elseif (v79 <= 67) then
						v76[v78[2]] = v60[v78[3]];
					elseif (v79 == 68) then
						local v268 = 0;
						local v269;
						while true do
							if (v268 == 0) then
								v269 = v78[2];
								v76[v269](v13(v76, v269 + 1, v71));
								break;
							end
						end
					elseif v76[v78[2]] then
						v70 = v70 + 1;
					else
						v70 = v78[3];
					end
					v70 = v70 + 1;
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
