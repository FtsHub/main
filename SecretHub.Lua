--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v83 = 0;
				local v84;
				while true do
					if (v83 == 0) then
						v84 = v2(v0(v30, 16));
						if v19 then
							local v98 = 0;
							local v99;
							while true do
								if (v98 == 1) then
									return v99;
								end
								if (v98 == 0) then
									v99 = v5(v84, v19);
									v19 = nil;
									v98 = 1;
								end
							end
						else
							return v84;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v85 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % ((3 - 1) ^ (((v33 - 1) - (v32 - (2 - 1))) + (620 - (555 + (941 - (282 + 595))))));
				return v85 - (v85 % (932 - (857 + 74)));
			else
				local v86 = ((90 + 480) - (367 + 181 + 20)) ^ (v32 - 1);
				return (((v31 % (v86 + v86)) >= v86) and (928 - (214 + 713))) or ((0 - 0) + 0);
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35 = 1065 - (68 + 997);
			local v36;
			local v37;
			while true do
				if (v35 == (1271 - (226 + 1044))) then
					return (v37 * (1114 - (1815 - (892 + 65)))) + v36;
				end
				if (v35 == (117 - (32 + 85))) then
					v36, v37 = v1(v16, v18, v18 + 2);
					v18 = v18 + 2 + 0;
					v35 = 1 + 0;
				end
			end
		end
		local function v23()
			local v38 = 0 - 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if (v38 == (1 - 0)) then
					return (v42 * (30800116 - 14022900)) + (v41 * (65886 - (87 + 263))) + (v40 * (436 - (67 + (1065 - (802 + 150))))) + v39;
				end
				if (v38 == (0 + 0)) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + (7 - (15 - 11)));
					v18 = v18 + (10 - 6);
					v38 = (1 - 0) + 0;
				end
			end
		end
		local function v24()
			local v43 = v23();
			local v44 = v23();
			local v45 = 1;
			local v46 = (v20(v44, (886 - (261 + 624)) + 0, 1017 - (915 + 82)) * (((4 - 1) - 1) ^ ((1170 - (1020 + 60)) - 58))) + v43;
			local v47 = v20(v44, 13 + 8, 40 - 9);
			local v48 = ((v20(v44, 11 + 21) == (1 + 0)) and -((2611 - (630 + 793)) - (1069 + 118))) or (3 - 2);
			if (v47 == (0 - 0)) then
				if (v46 == (0 - 0)) then
					return v48 * (0 + (0 - 0));
				else
					local v90 = (0 + 0) - 0;
					while true do
						if ((0 + 0) == v90) then
							v47 = 3 - 2;
							v45 = 0 - 0;
							break;
						end
					end
				end
			elseif (v47 == (2031 + 16)) then
				return ((v46 == (791 - (368 + 423))) and (v48 * ((3 - 2) / (18 - (10 + 8))))) or (v48 * NaN);
			end
			return v8(v48, v47 - (56 + 967)) * (v45 + (v46 / ((7 - 5) ^ (494 - (416 + 26)))));
		end
		local function v25(v49)
			local v50;
			if not v49 then
				v49 = v23();
				if (v49 == (0 - 0)) then
					return "";
				end
			end
			v50 = v3(v16, v18, (v18 + v49) - (1748 - (760 + 987)));
			v18 = v18 + v49;
			local v51 = {};
			for v67 = 1, #v50 do
				v51[v67] = v2(v1(v3(v50, v67, v67)));
			end
			return v6(v51);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 0;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			while true do
				if (v52 == (1693 - (209 + 1481))) then
					v59 = nil;
					v60 = nil;
					v52 = 11 - 7;
				end
				if (v52 == (1636 - (1373 + 263))) then
					v53 = 1000 - (451 + 549);
					v54 = nil;
					v52 = 1 + 0;
				end
				if (v52 ~= 2) then
				else
					v57 = nil;
					v58 = nil;
					v52 = 4 - 1;
				end
				if (v52 ~= 4) then
				else
					while true do
						if (v53 == (4 - 1)) then
							v60 = nil;
							while true do
								local v100 = 1384 - (746 + 638);
								while true do
									if (v100 == (1 + 0)) then
										if (v54 == (4 - 1)) then
											local v102 = 341 - (218 + 123);
											local v103;
											while true do
												if (v102 == 0) then
													v103 = 1581 - (1535 + 46);
													while true do
														if (v103 ~= (0 + 0)) then
														else
															for v265 = 1 + 0, v23() do
																v56[v265 - (561 - (306 + 254))] = v28();
															end
															return v58;
														end
													end
													break;
												end
											end
										end
										if (v54 == (0 + 0)) then
											local v104 = 0 - 0;
											while true do
												if (v104 == (1468 - (899 + 568))) then
													v57 = {};
													v54 = 1;
													break;
												end
												if (v104 == (0 + 0)) then
													local v197 = 0;
													while true do
														if (v197 ~= (0 - 0)) then
														else
															v55 = {};
															v56 = {};
															v197 = 604 - (268 + 335);
														end
														if (v197 ~= (291 - (60 + 230))) then
														else
															v104 = 1;
															break;
														end
													end
												end
											end
										end
										break;
									end
									if (v100 == (572 - (426 + 146))) then
										local v101 = 0 + 0;
										while true do
											if (v101 ~= (1456 - (282 + 1174))) then
											else
												if (v54 ~= (813 - (569 + 242))) then
												else
													local v198 = 0 - 0;
													local v199;
													local v200;
													while true do
														if (0 == v198) then
															v199 = 0;
															v200 = nil;
															v198 = 1;
														end
														if (v198 == 1) then
															while true do
																if ((0 + 0) ~= v199) then
																else
																	v200 = 1024 - (706 + 318);
																	while true do
																		if (0 == v200) then
																			local v275 = 0;
																			while true do
																				if (v275 == (1251 - (721 + 530))) then
																					for v287 = 1272 - (945 + 326), v59 do
																						local v288 = 0;
																						local v289;
																						local v290;
																						local v291;
																						while true do
																							if (v288 ~= (0 - 0)) then
																							else
																								v289 = 0 + 0;
																								v290 = nil;
																								v288 = 701 - (271 + 429);
																							end
																							if (v288 == (1 + 0)) then
																								v291 = nil;
																								while true do
																									if (v289 == (1501 - (1408 + 92))) then
																										if (v290 == 1) then
																											v291 = v21() ~= 0;
																										elseif (v290 == (1088 - (461 + 625))) then
																											v291 = v24();
																										elseif (v290 ~= (1291 - (993 + 295))) then
																										else
																											v291 = v25();
																										end
																										v60[v287] = v291;
																										break;
																									end
																									if (0 ~= v289) then
																									else
																										local v294 = 0 + 0;
																										while true do
																											if (v294 ~= (1171 - (418 + 753))) then
																											else
																												v290 = v21();
																												v291 = nil;
																												v294 = 1 + 0;
																											end
																											if (v294 == 1) then
																												v289 = 1 + 0;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					v58[1 + 2] = v21();
																					v275 = 1;
																				end
																				if (v275 ~= (1 + 0)) then
																				else
																					v200 = 1;
																					break;
																				end
																			end
																		end
																		if (v200 ~= 1) then
																		else
																			for v281 = 1, v23() do
																				local v282 = 529 - (406 + 123);
																				local v283;
																				local v284;
																				local v285;
																				while true do
																					if (v282 == 1) then
																						v285 = nil;
																						while true do
																							if (v283 == 0) then
																								local v292 = 0;
																								while true do
																									if (v292 ~= 0) then
																									else
																										v284 = 0;
																										v285 = nil;
																										v292 = 1770 - (1749 + 20);
																									end
																									if ((1 + 0) == v292) then
																										v283 = 1323 - (1249 + 73);
																										break;
																									end
																								end
																							end
																							if (v283 == 1) then
																								while true do
																									if (v284 == (0 + 0)) then
																										v285 = v21();
																										if (v20(v285, 1146 - (466 + 679), 1) ~= 0) then
																										else
																											local v295 = 0 - 0;
																											local v296;
																											local v297;
																											local v298;
																											local v299;
																											local v300;
																											while true do
																												if (v295 == (5 - 3)) then
																													v300 = nil;
																													while true do
																														if (v296 == (1901 - (106 + 1794))) then
																															v299 = nil;
																															v300 = nil;
																															v296 = 1 + 1;
																														end
																														if (2 == v296) then
																															while true do
																																if (v297 == 0) then
																																	local v301 = 0 + 0;
																																	while true do
																																		if (v301 == (0 - 0)) then
																																			v298 = v20(v285, 5 - 3, 117 - (4 + 110));
																																			v299 = v20(v285, 588 - (57 + 527), 1433 - (41 + 1386));
																																			v301 = 104 - (17 + 86);
																																		end
																																		if ((1 + 0) ~= v301) then
																																		else
																																			v297 = 1;
																																			break;
																																		end
																																	end
																																end
																																if (v297 == 3) then
																																	if (v20(v299, 6 - 3, 8 - 5) == 1) then
																																		v300[4] = v60[v300[170 - (122 + 44)]];
																																	end
																																	v55[v281] = v300;
																																	break;
																																end
																																if (v297 == 1) then
																																	v300 = {v22(),v22(),nil,nil};
																																	if (v298 == 0) then
																																		local v305 = 0 - 0;
																																		local v306;
																																		local v307;
																																		while true do
																																			if (v305 ~= (1 + 0)) then
																																			else
																																				while true do
																																					if (v306 == 0) then
																																						v307 = 0 + 0;
																																						while true do
																																							if (v307 ~= (0 - 0)) then
																																							else
																																								v300[3] = v22();
																																								v300[69 - (30 + 35)] = v22();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v305 == (0 + 0)) then
																																				v306 = 0;
																																				v307 = nil;
																																				v305 = 1258 - (1043 + 214);
																																			end
																																		end
																																	elseif (v298 == (3 - 2)) then
																																		v300[1215 - (323 + 889)] = v23();
																																	elseif (v298 == (5 - 3)) then
																																		v300[3] = v23() - ((582 - (361 + 219)) ^ 16);
																																	elseif (v298 ~= 3) then
																																	else
																																		local v314 = 320 - (53 + 267);
																																		local v315;
																																		while true do
																																			if (v314 == (0 + 0)) then
																																				v315 = 413 - (15 + 398);
																																				while true do
																																					if (v315 == 0) then
																																						v300[3] = v23() - ((984 - (18 + 964)) ^ 16);
																																						v300[14 - 10] = v22();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v297 = 2;
																																end
																																if (v297 ~= 2) then
																																else
																																	if (v20(v299, 1 + 0, 1 + 0) ~= 1) then
																																	else
																																		v300[852 - (20 + 830)] = v60[v300[2 + 0]];
																																	end
																																	if (v20(v299, 128 - (116 + 10), 2) ~= (1 + 0)) then
																																	else
																																		v300[3] = v60[v300[3]];
																																	end
																																	v297 = 3;
																																end
																															end
																															break;
																														end
																														if (v296 == 0) then
																															v297 = 738 - (542 + 196);
																															v298 = nil;
																															v296 = 1;
																														end
																													end
																													break;
																												end
																												if (v295 ~= 0) then
																												else
																													v296 = 0 - 0;
																													v297 = nil;
																													v295 = 1;
																												end
																												if (v295 == (1 + 0)) then
																													v298 = nil;
																													v299 = nil;
																													v295 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v282 == (0 + 0)) then
																						v283 = 0;
																						v284 = nil;
																						v282 = 1;
																					end
																				end
																			end
																			v54 = 3;
																			break;
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
												end
												if (v54 ~= (1 + 0)) then
												else
													local v201 = 0;
													local v202;
													local v203;
													while true do
														if (0 ~= v201) then
														else
															v202 = 0;
															v203 = nil;
															v201 = 2 - 1;
														end
														if (v201 ~= 1) then
														else
															while true do
																if (v202 ~= (0 - 0)) then
																else
																	v203 = 1551 - (1126 + 425);
																	while true do
																		if ((405 - (118 + 287)) == v203) then
																			local v276 = 0;
																			local v277;
																			while true do
																				if (v276 == (0 - 0)) then
																					v277 = 1121 - (118 + 1003);
																					while true do
																						if (0 == v277) then
																							v58 = {v55,v56,nil,v57};
																							v59 = v23();
																							v277 = 1;
																						end
																						if (v277 == (4 - 3)) then
																							v203 = 1;
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		if (v203 ~= 1) then
																		else
																			v60 = {};
																			v54 = 1 + 1;
																			break;
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
												end
												v101 = 1;
											end
											if ((978 - (553 + 424)) == v101) then
												v100 = 1;
												break;
											end
										end
									end
								end
							end
							break;
						end
						if (v53 ~= (0 - 0)) then
						else
							v54 = 0;
							v55 = nil;
							v53 = 1;
						end
						if (v53 ~= 1) then
						else
							local v95 = 0;
							while true do
								if (v95 ~= 0) then
								else
									v56 = nil;
									v57 = nil;
									v95 = 1;
								end
								if (v95 == (1 + 0)) then
									v53 = 2;
									break;
								end
							end
						end
						if (v53 ~= (2 + 0)) then
						else
							local v96 = 0 + 0;
							local v97;
							while true do
								if (v96 ~= (0 + 0)) then
								else
									v97 = 0 + 0;
									while true do
										if (v97 ~= (0 - 0)) then
										else
											local v105 = 0 - 0;
											while true do
												if (v105 ~= 0) then
												else
													v58 = nil;
													v59 = nil;
													v105 = 1;
												end
												if (v105 ~= 1) then
												else
													v97 = 1;
													break;
												end
											end
										end
										if (v97 ~= (2 - 1)) then
										else
											v53 = 3;
											break;
										end
									end
									break;
								end
							end
						end
					end
					break;
				end
				if (v52 ~= 1) then
				else
					v55 = nil;
					v56 = nil;
					v52 = 2;
				end
			end
		end
		local function v29(v61, v62, v63)
			local v64 = v61[1];
			local v65 = v61[2];
			local v66 = v61[3];
			return function(...)
				local v69 = v64;
				local v70 = v65;
				local v71 = v66;
				local v72 = v27;
				local v73 = 1;
				local v74 = -1;
				local v75 = {};
				local v76 = {...};
				local v77 = v12("#", ...) - 1;
				local v78 = {};
				local v79 = {};
				for v87 = 0, v77 do
					if (v87 >= v71) then
						v75[v87 - v71] = v76[v87 + 1];
					else
						v79[v87] = v76[v87 + 1];
					end
				end
				local v80 = (v77 - v71) + 1;
				local v81;
				local v82;
				while true do
					v81 = v69[v73];
					v82 = v81[1];
					if (v82 <= 26) then
						if (v82 <= 12) then
							if (v82 <= 5) then
								if (v82 <= 2) then
									if (v82 <= 0) then
										v79[v81[2]] = v79[v81[3]][v81[4]];
									elseif (v82 == 1) then
										v79[v81[2]] = v81[3];
									else
										v79[v81[2]] = v79[v81[3]] % v81[4];
									end
								elseif (v82 <= 3) then
									v73 = v81[3];
								elseif (v82 > 4) then
									for v204 = v81[2], v81[3] do
										v79[v204] = nil;
									end
								else
									v79[v81[2]] = v81[3];
								end
							elseif (v82 <= 8) then
								if (v82 <= 6) then
									v79[v81[2]] = v62[v81[3]];
								elseif (v82 > 7) then
									local v126 = v81[2];
									v79[v126] = v79[v126](v79[v126 + 1]);
								else
									v79[v81[2]] = v29(v70[v81[3]], nil, v63);
								end
							elseif (v82 <= 10) then
								if (v82 == 9) then
									local v129 = v81[2];
									local v130, v131 = v72(v79[v129](v13(v79, v129 + 1, v81[3])));
									v74 = (v131 + v129) - 1;
									local v132 = 0;
									for v206 = v129, v74 do
										v132 = v132 + 1;
										v79[v206] = v130[v132];
									end
								else
									v79[v81[2]] = v62[v81[3]];
								end
							elseif (v82 > 11) then
								local v135 = v81[2];
								local v136 = v79[v81[3]];
								v79[v135 + 1] = v136;
								v79[v135] = v136[v81[4]];
							else
								v79[v81[2]]();
							end
						elseif (v82 <= 19) then
							if (v82 <= 15) then
								if (v82 <= 13) then
									v79[v81[2]] = v79[v81[3]] / v81[4];
								elseif (v82 > 14) then
									v79[v81[2]] = {};
								elseif (v81[2] == v79[v81[4]]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							elseif (v82 <= 17) then
								if (v82 == 16) then
									local v141 = v70[v81[3]];
									local v142;
									local v143 = {};
									v142 = v10({}, {__index=function(v209, v210)
										local v211 = 0;
										local v212;
										while true do
											if (v211 == 0) then
												v212 = v143[v210];
												return v212[1][v212[2]];
											end
										end
									end,__newindex=function(v213, v214, v215)
										local v216 = v143[v214];
										v216[1][v216[2]] = v215;
									end});
									for v218 = 1, v81[4] do
										v73 = v73 + 1;
										local v219 = v69[v73];
										if (v219[1] == 41) then
											v143[v218 - 1] = {v79,v219[3]};
										else
											v143[v218 - 1] = {v62,v219[3]};
										end
										v78[#v78 + 1] = v143;
									end
									v79[v81[2]] = v29(v141, v142, v63);
								else
									local v145 = v81[2];
									local v146 = {};
									for v221 = 1, #v78 do
										local v222 = v78[v221];
										for v239 = 0, #v222 do
											local v240 = v222[v239];
											local v241 = v240[1];
											local v242 = v240[2];
											if ((v241 == v79) and (v242 >= v145)) then
												local v262 = 0;
												while true do
													if (v262 == 0) then
														v146[v242] = v241[v242];
														v240[1] = v146;
														break;
													end
												end
											end
										end
									end
								end
							elseif (v82 > 18) then
								v79[v81[2]] = v79[v81[3]][v81[4]];
							elseif (v79[v81[2]] == v81[4]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						elseif (v82 <= 22) then
							if (v82 <= 20) then
								local v112 = v81[2];
								v79[v112] = v79[v112]();
							elseif (v82 == 21) then
								v73 = v81[3];
							else
								do
									return;
								end
							end
						elseif (v82 <= 24) then
							if (v82 == 23) then
								v79[v81[2]] = v29(v70[v81[3]], nil, v63);
							else
								local v151 = v81[2];
								v79[v151] = v79[v151](v13(v79, v151 + 1, v74));
							end
						elseif (v82 > 25) then
							v79[v81[2]] = {};
						else
							local v154 = 0;
							local v155;
							while true do
								if (v154 == 0) then
									v155 = v81[2];
									v79[v155](v13(v79, v155 + 1, v81[3]));
									break;
								end
							end
						end
					elseif (v82 <= 39) then
						if (v82 <= 32) then
							if (v82 <= 29) then
								if (v82 <= 27) then
									for v119 = v81[2], v81[3] do
										v79[v119] = nil;
									end
								elseif (v82 > 28) then
									local v156 = v70[v81[3]];
									local v157;
									local v158 = {};
									v157 = v10({}, {__index=function(v223, v224)
										local v225 = v158[v224];
										return v225[1][v225[2]];
									end,__newindex=function(v226, v227, v228)
										local v229 = v158[v227];
										v229[1][v229[2]] = v228;
									end});
									for v231 = 1, v81[4] do
										v73 = v73 + 1;
										local v232 = v69[v73];
										if (v232[1] == 41) then
											v158[v231 - 1] = {v79,v232[3]};
										else
											v158[v231 - 1] = {v62,v232[3]};
										end
										v78[#v78 + 1] = v158;
									end
									v79[v81[2]] = v29(v156, v157, v63);
								else
									local v160 = 0;
									local v161;
									local v162;
									while true do
										if (v160 == 0) then
											v161 = v81[2];
											v162 = {};
											v160 = 1;
										end
										if (v160 == 1) then
											for v263 = 1, #v78 do
												local v264 = v78[v263];
												for v267 = 0, #v264 do
													local v268 = v264[v267];
													local v269 = v268[1];
													local v270 = v268[2];
													if ((v269 == v79) and (v270 >= v161)) then
														local v274 = 0;
														while true do
															if (v274 == 0) then
																v162[v270] = v269[v270];
																v268[1] = v162;
																break;
															end
														end
													end
												end
											end
											break;
										end
									end
								end
							elseif (v82 <= 30) then
								v79[v81[2]][v81[3]] = v79[v81[4]];
							elseif (v82 > 31) then
								local v163 = v81[2];
								v79[v163](v79[v163 + 1]);
							else
								v79[v81[2]] = v63[v81[3]];
							end
						elseif (v82 <= 35) then
							if (v82 <= 33) then
								v79[v81[2]] = v79[v81[3]] / v81[4];
							elseif (v82 == 34) then
								v79[v81[2]]();
							else
								local v166 = 0;
								local v167;
								while true do
									if (v166 == 0) then
										v167 = v81[2];
										v79[v167] = v79[v167](v79[v167 + 1]);
										break;
									end
								end
							end
						elseif (v82 <= 37) then
							if (v82 == 36) then
								v79[v81[2]] = v79[v81[3]] % v81[4];
							else
								v79[v81[2]][v81[3]] = v81[4];
							end
						elseif (v82 == 38) then
							local v171 = v81[2];
							local v172, v173 = v72(v79[v171](v13(v79, v171 + 1, v81[3])));
							v74 = (v173 + v171) - 1;
							local v174 = 0;
							for v234 = v171, v74 do
								v174 = v174 + 1;
								v79[v234] = v172[v174];
							end
						else
							local v175 = 0;
							local v176;
							while true do
								if (v175 == 0) then
									v176 = v81[2];
									v79[v176] = v79[v176](v13(v79, v176 + 1, v81[3]));
									break;
								end
							end
						end
					elseif (v82 <= 46) then
						if (v82 <= 42) then
							if (v82 <= 40) then
								local v117 = 0;
								local v118;
								while true do
									if (v117 == 0) then
										v118 = v81[2];
										v79[v118](v79[v118 + 1]);
										break;
									end
								end
							elseif (v82 > 41) then
								local v177 = v81[2];
								v79[v177](v13(v79, v177 + 1, v81[3]));
							else
								v79[v81[2]] = v79[v81[3]];
							end
						elseif (v82 <= 44) then
							if (v82 > 43) then
								local v180 = v81[2];
								v79[v180] = v79[v180]();
							else
								v79[v81[2]] = v63[v81[3]];
							end
						elseif (v82 > 45) then
							local v184 = 0;
							local v185;
							local v186;
							while true do
								if (v184 == 1) then
									v79[v185 + 1] = v186;
									v79[v185] = v186[v81[4]];
									break;
								end
								if (0 == v184) then
									v185 = v81[2];
									v186 = v79[v81[3]];
									v184 = 1;
								end
							end
						else
							v79[v81[2]] = v79[v81[3]];
						end
					elseif (v82 <= 49) then
						if (v82 <= 47) then
							do
								return;
							end
						elseif (v82 == 48) then
							v79[v81[2]][v81[3]] = v81[4];
						elseif (v79[v81[2]] == v81[4]) then
							v73 = v73 + 1;
						else
							v73 = v81[3];
						end
					elseif (v82 <= 51) then
						if (v82 == 50) then
							v79[v81[2]][v81[3]] = v79[v81[4]];
						else
							local v193 = v81[2];
							v79[v193] = v79[v193](v13(v79, v193 + 1, v81[3]));
						end
					elseif (v82 > 52) then
						local v195 = v81[2];
						v79[v195] = v79[v195](v13(v79, v195 + 1, v74));
					elseif (v81[2] == v79[v81[4]]) then
						v73 = v73 + 1;
					else
						v73 = v81[3];
					end
					v73 = v73 + 1;
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
